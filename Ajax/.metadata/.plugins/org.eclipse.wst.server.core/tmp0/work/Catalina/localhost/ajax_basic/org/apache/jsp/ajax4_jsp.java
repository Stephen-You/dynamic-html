/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.82
 * Generated at: 2018-09-21 21:29:10 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.*;

public final class ajax4_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private org.apache.jasper.runtime.TagHandlerPool _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody;

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody = org.apache.jasper.runtime.TagHandlerPool.getTagHandlerPool(getServletConfig());
  }

  public void _jspDestroy() {
    _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.release();
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE HTML PUBLIC \"-//W3C//DTD HTML 4.01 Transitional//EN\">\r\n");
      out.write("<html>\r\n");
      out.write("  <head>\r\n");
      out.write("    <title>My JSP 'ajax1.jsp' starting page</title>\r\n");
      out.write("    \r\n");
      out.write("\t<meta http-equiv=\"pragma\" content=\"no-cache\">\r\n");
      out.write("\t<meta http-equiv=\"cache-control\" content=\"no-cache\">\r\n");
      out.write("\t<meta http-equiv=\"expires\" content=\"0\">    \r\n");
      out.write("\t<meta http-equiv=\"keywords\" content=\"keyword1,keyword2,keyword3\">\r\n");
      out.write("\t<meta http-equiv=\"description\" content=\"This is my page\">\r\n");
      out.write("\t<!--\r\n");
      out.write("\t<link rel=\"stylesheet\" type=\"text/css\" href=\"styles.css\">\r\n");
      out.write("\t-->\r\n");
      out.write("<script type=\"text/javascript\">\r\n");
      out.write("// 创建异步对象\r\n");
      out.write("function createXMLHttpRequest() {\r\n");
      out.write("\ttry {\r\n");
      out.write("\t\treturn new XMLHttpRequest();//大多数浏览器\r\n");
      out.write("\t} catch (e) {\r\n");
      out.write("\t\ttry {\r\n");
      out.write("\t\t\treturn ActvieXObject(\"Msxml2.XMLHTTP\");//IE6.0\r\n");
      out.write("\t\t} catch (e) {\r\n");
      out.write("\t\t\ttry {\r\n");
      out.write("\t\t\t\treturn ActvieXObject(\"Microsoft.XMLHTTP\");//IE5.5及更早版本\t\r\n");
      out.write("\t\t\t} catch (e) {\r\n");
      out.write("\t\t\t\talert(\"哥们儿，您用的是什么浏览器啊？\");\r\n");
      out.write("\t\t\t\tthrow e;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t}\r\n");
      out.write("\t}\r\n");
      out.write("}\r\n");
      out.write("\r\n");
      out.write("window.onload = function() {//文档加载完毕后执行\r\n");
      out.write("\tvar btn = document.getElementById(\"btn\");\r\n");
      out.write("\tbtn.onclick = function() {//给按钮的点击事件注册监听\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\tajax四步操作，得到服务器的响应\r\n");
      out.write("\t\t把响应结果显示到h1元素中\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\t1. 得到异步对象 \r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\tvar xmlHttp = createXMLHttpRequest();\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\t2. 打开与服务器的连接\r\n");
      out.write("\t\t  * 指定请求方式\r\n");
      out.write("\t\t  * 指定请求的URL\r\n");
      out.write("\t\t  * 指定是否为异步请求\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\txmlHttp.open(\"GET\", \"");
      if (_jspx_meth_c_005furl_005f0(_jspx_page_context))
        return;
      out.write("\", true);\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\t3. 发送请求\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\txmlHttp.send(null);//GET请求没有请求体，但也要给出null，不然FireFox可能会不能发送！\r\n");
      out.write("\t\t/*\r\n");
      out.write("\t\t4. 给异步对象的onreadystatechange事件注册监听器\r\n");
      out.write("\t\t*/\r\n");
      out.write("\t\txmlHttp.onreadystatechange = function() {//当xmlHttp的状态发生变化时执行\r\n");
      out.write("\t\t\t// 双重判断：xmlHttp的状态为4（服务器响应结束），以及服务器响应的状态码为200（响应成功）\r\n");
      out.write("\t\t\tif(xmlHttp.readyState == 4 && xmlHttp.status == 200) {\r\n");
      out.write("\t\t\t\t// 获取服务器的响应结果（xml）\r\n");
      out.write("\t\t\t\tvar doc = xmlHttp.responseXML;\r\n");
      out.write("\t\t\t\t// 查询文档下名为student的所有元素，得到数组，再取下标0元素\r\n");
      out.write("\t\t\t\tvar ele = doc.getElementsByTagName(\"student\")[0];\r\n");
      out.write("\t\t\t\tvar number = ele.getAttribute(\"number\");//获取元素名为number的属性值\r\n");
      out.write("\t\t\t\tvar name;\r\n");
      out.write("\t\t\t\tvar age;\r\n");
      out.write("\t\t\t\tvar sex;\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\t// 处理浏览器的差异\r\n");
      out.write("\t\t\t\tif(window.addEventListener) {\r\n");
      out.write("\t\t\t\t\tname = ele.getElementsByTagName(\"name\")[0].textContent;//其他浏览器\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tname = ele.getElementsByTagName(\"name\")[0].text;//IE支持\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(window.addEventListener) {\r\n");
      out.write("\t\t\t\t\tage = ele.getElementsByTagName(\"age\")[0].textContent;//其他浏览器\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tage = ele.getElementsByTagName(\"age\")[0].text;//IE支持\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\t\t\t\tif(window.addEventListener) {\r\n");
      out.write("\t\t\t\t\tsex = ele.getElementsByTagName(\"sex\")[0].textContent;//其他浏览器\r\n");
      out.write("\t\t\t\t} else {\r\n");
      out.write("\t\t\t\t\tsex = ele.getElementsByTagName(\"sex\")[0].text;//IE支持\r\n");
      out.write("\t\t\t\t}\r\n");
      out.write("\r\n");
      out.write("\t\t\t\tvar text = number + \", \" + name + \", \" + age + \", \" + sex;\r\n");
      out.write("\t\t\t\tdocument.getElementById(\"h1\").innerHTML = text;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t};\r\n");
      out.write("\t};\r\n");
      out.write("};\r\n");
      out.write("</script>\r\n");
      out.write("  </head>\r\n");
      out.write("  \r\n");
      out.write("  <body>\r\n");
      out.write("<button id=\"btn\">点击这里</button>\r\n");
      out.write("<h1 id=\"h1\"></h1>\r\n");
      out.write("  </body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }

  private boolean _jspx_meth_c_005furl_005f0(javax.servlet.jsp.PageContext _jspx_page_context)
          throws java.lang.Throwable {
    javax.servlet.jsp.PageContext pageContext = _jspx_page_context;
    javax.servlet.jsp.JspWriter out = _jspx_page_context.getOut();
    //  c:url
    org.apache.taglibs.standard.tag.rt.core.UrlTag _jspx_th_c_005furl_005f0 = (org.apache.taglibs.standard.tag.rt.core.UrlTag) _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.get(org.apache.taglibs.standard.tag.rt.core.UrlTag.class);
    boolean _jspx_th_c_005furl_005f0_reused = false;
    try {
      _jspx_th_c_005furl_005f0.setPageContext(_jspx_page_context);
      _jspx_th_c_005furl_005f0.setParent(null);
      // /ajax4.jsp(54,23) name = value type = null reqTime = true required = false fragment = false deferredValue = false expectedTypeName = null deferredMethod = false methodSignature = null
      _jspx_th_c_005furl_005f0.setValue("/BServlet");
      int _jspx_eval_c_005furl_005f0 = _jspx_th_c_005furl_005f0.doStartTag();
      if (_jspx_th_c_005furl_005f0.doEndTag() == javax.servlet.jsp.tagext.Tag.SKIP_PAGE) {
        return true;
      }
      _005fjspx_005ftagPool_005fc_005furl_0026_005fvalue_005fnobody.reuse(_jspx_th_c_005furl_005f0);
      _jspx_th_c_005furl_005f0_reused = true;
    } finally {
      org.apache.jasper.runtime.JspRuntimeLibrary.releaseTag(_jspx_th_c_005furl_005f0, _jsp_getInstanceManager(), _jspx_th_c_005furl_005f0_reused);
    }
    return false;
  }
}
